import{_ as a,l as o,K as p,e as s,L as n}from"./mermaid.core.tscUq-jQ.js";import{p as m}from"./treemap-75Q7IDZK.CNrNg8fE.js";import"./framework.G3zEtWHG.js";import"./chunks/dayjs.BqMCNpOC.js";import"./YunComment.vue_vue_type_style_index_0_lang.BUk52cte.js";import"./app.Bj__erl2.js";import"./chunks/vue-router.BsZKfFkz.js";import"./chunks/@vueuse/motion.IdxHhwG2.js";import"./chunks/vue-i18n.B04OBaBb.js";import"./chunks/pinia.B9bXv_6k.js";import"./chunks/nprogress.CZUfyql0.js";import"./index.C5okkQwF.js";import"./_baseUniq.Di6Ydjid.js";import"./_basePickBy.Cy_EoMMc.js";import"./clone.DcVqbxQ3.js";var g={parse:a(async r=>{const t=await m("info",r);o.debug(t)},"parse")},v={version:n.version+""},d=a(()=>v.version,"getVersion"),c={getVersion:d},l=a((r,t,i)=>{o.debug(`rendering info diagram
`+r);const e=p(t);s(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw"),f={draw:l},B={parser:g,db:c,renderer:f};export{B as diagram};
